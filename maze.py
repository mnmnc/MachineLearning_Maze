
data_string = """
0 0 0
0 1 1
0 2 0
0 3 1
0 4 1
0 5 0
0 6 1
0 7 1
0 8 0
0 9 1
0 10 1
0 11 1
0 12 1
0 13 1
0 14 1
0 15 0
1 0 0
1 1 3
1 2 2
1 3 1
1 4 2
1 5 3
1 6 0
1 7 2
1 8 1
1 9 1
1 10 1
1 11 2
1 12 0
1 13 0
1 14 3
1 15 2
2 0 2
2 1 1
2 2 1
2 3 1
2 4 1
2 5 1
2 6 3
2 7 1
2 8 0
2 9 1
2 10 3
2 11 2
2 12 2
2 13 3
2 14 0
2 15 3
3 0 2
3 1 0
3 2 0
3 3 1
3 4 3
3 5 0
3 6 0
3 7 3
3 8 2
3 9 1
3 10 1
3 11 2
3 12 1
3 13 2
3 14 2
3 15 2
4 0 2
4 1 3
4 2 2
4 3 0
4 4 1
4 5 2
4 6 3
4 7 0
4 8 0
4 9 1
4 10 3
4 11 2
4 12 2
4 13 2
4 14 3
4 15 2
5 0 2
5 1 0
5 2 3
5 3 2
5 4 1
5 5 3
5 6 1
5 7 3
5 8 2
5 9 1
5 10 0
5 11 1
5 12 3
5 13 0
5 14 1
5 15 2
6 0 2
6 1 2
6 2 0
6 3 1
6 4 1
6 5 1
6 6 1
6 7 1
6 8 1
6 9 2
6 10 2
6 11 1
6 12 0
6 13 3
6 14 2
6 15 2
7 0 2
7 1 2
7 2 3
7 3 0
7 4 1
7 5 0
7 6 1
7 7 2
7 8 1
7 9 2
7 10 2
7 11 2
7 12 3
7 13 1
7 14 2
7 15 2
8 0 2
8 1 0
8 2 0
8 3 3
8 4 2
8 5 3
8 6 2
8 7 1
8 8 3
8 9 2
8 10 0
8 11 1
8 12 2
8 13 0
8 14 3
8 15 2
9 0 2
9 1 3
9 2 2
9 3 1
9 4 1
9 5 1
9 6 0
9 7 1
9 8 2
9 9 2
9 10 2
9 11 2
9 12 1
9 13 3
9 14 0
9 15 3
10 0 0
10 1 3
10 2 0
10 3 1
10 4 1
10 5 2
10 6 2
10 7 2
10 8 1
10 9 2
10 10 2
10 11 0
10 12 1
10 13 1
10 14 2
10 15 1
11 0 2
11 1 0
11 2 1
11 3 1
11 4 3
11 5 2
11 6 3
11 7 0
11 8 3
11 9 2
11 10 2
11 11 2
11 12 0
11 13 2
11 14 1
11 15 2
12 0 2
12 1 1
12 2 2
12 3 1
12 4 1
12 5 1
12 6 0
12 7 3
12 8 0
12 9 3
12 10 2
12 11 3
12 12 3
12 13 1
12 14 2
12 15 2
13 0 0
13 1 2
13 2 1
13 3 1
13 4 3
13 5 2
13 6 2
13 7 1
13 8 3
13 9 0
13 10 1
13 11 1
13 12 0
13 13 2
13 14 2
13 15 2
14 0 2
14 1 0
14 2 1
14 3 1
14 4 1
14 5 2
14 6 1
14 7 0
14 8 1
14 9 3
14 10 2
14 11 2
14 12 2
14 13 3
14 14 2
14 15 2
15 0 2
15 1 3
15 2 1
15 3 2
15 4 1
15 5 1
15 6 3
15 7 1
15 8 1
15 9 1
15 10 3
15 11 2
15 12 1
15 13 1
15 14 3
15 15 2
"""

other = """
*************************************************** *************************************************
* *     *             *     *           *   *     *     *   *             *       *     *     *     *
* * *** * * ********* * ***** ******* * * * * * * * *** * * * ***** ***** *** ***** * * ***** * *** *
*     *   *   *     * *     *     * * * * * * * * * * *   * *     *   * *   *       * * *     *   * *
************* * * *** *** * ***** * * *** * * * *** * ***** *** ***** * *** ********* * * ******* * *
*       *     * *   *   * *         * *   *   *       *   *   * *     * *   *         * *       * * *
* ***** * ***** *** *** * *********** * *************** * * * * * ***** * *** ********* ***** *** * *
* *       *   * * *     * * *       *   *       *       * * * * * *       *   *   *   *     * *   * *
* ********* *** * ******* * * ***** * *** ***** * ******* * *** * ***** ***** * * * * ***** * * *** *
* *     *       *       *   * * *   * *   * *   *     * * *   * *     *       * *   *     * *   *   *
* * *** * ******* * *** ***** * * *** *** * * ******* * * * * * ***** ********* ******* *** ***** ***
* *   * *     *   *   *   *   * * * * *   * *     *   * * * *   *   *   *         *   *   *     *   *
* *** * ***** * ***** *** * *** * * * * *** *** *** *** * * ******* *** * ******* * * *** ***** *** *
*     * *     *     * *     *     * * *   *     *   *   * *   *     *   * *   *   * *   *       *   *
* ***** * ********* * ******* ***** * * * * ***** *** * * *** * * * * * *** * * *** * *********** * *
* * *   *   *     * * *   *     * *   * * * *   * * * *   * * * * * * * *   * * *   *       *     * *
* * * ***** * ***** * * * ***** * * *** * * * *** * * ***** * *** * * *** *** * * ******* * * *** * *
*   * *     * *     *   *   * * * *   * * *   *   * *     *     * * *   * *   * * *       * *   * * *
*** * * ***** * *********** * * * *** *** *** * *** ***** ***** * ***** * * *** *** *********** * * *
*   * *     * *       *   * * * *   * *   *   *   *     *   *   * *   * * * *   *   *   *       * * *
* *** ***** * ******* *** * * * * * * * ********* * ******* * *** * * * * * * *** *** * * ******* * *
*   *   *   * *     *     * * * * *     *   *     *         *     * * *   * * * *     *   *       * *
* ***** * *** * * ******* * * * ********* * * ***** ********* ***** * ***** * * * ******* * *********
* *   * *   *   *         * *             * * *   *   *   *   *     *       * *   *     * *     *   *
* * * * *** * ************* *************** * * ***** *** * *** ***** ******* ***** *** ******* * * *
* * * *   * *     *   *     *     *       * * * *   *   * *   * *   * *   * *       * *       *   * *
* * * *** * ***** *** * *** * *** ***** *** * * * * *** * * *** * * * * * * ********* ******* ***** *
* * * *   *     *   * * *   * * *     *   * * *   *     * * *   * *   * * *     *           *   *   *
* * * * ******* *** * * *** * * ***** *** * * * ********* * * *** ***** * ***** * ******* * *** * * *
* * *   *   *   * *   *   * *   *   * *   * * *       *   * *   * *     *     *   *   * * *   *   * *
*** ***** * * *** *** *** *** *** * * * *** * ******* *** * *** *** ******* * * *** * * * * ******* *
* *   *   *   *     * *   *   *   * * *       *   *     * * * *     *     * * *   * *   * * *       *
* *** *** ***** ***** * *** *** *** * ********* * ***** * * * ***** * *** *** *** * *** * *** *******
*   *   *     * *     * *   *   * * *         * *   *   * * * *   * * * * *   * *   * * *   *       *
*** *** ***** * * ***** * *** *** * *** ***** * *** * *** * * * * *** * * * *** ***** * *** ******* *
* *   *   *   * * *   *   * * *   *   * *   *   * * *   * *   * *     * * * *         * *       *   *
* *** *** * *** * * * ***** * * * *** *** * *** * * *** * * *** ******* * * ***** *** * * ***** * ***
* *   *   * *       *       * * *   *     *   *   * *   * * *   *     * *   *   * *   * * *   * *   *
* * *** *** * ************* * * *** ********* ***** * *** * * *** * * * ***** * *** * * * * * ***** *
* *     * * *   *         * * * * *   *     *       * * *   * *   * *   *     *     * * *   *     * *
* ******* * * *** ******* * * * * * * * *** ********* * * *** * *** *** * *** ***** *** ******* *** *
*         * * *   * *     * * *   * * *   * *       * *     * *   *   * * * *   * * *   *     *     *
********* * * * *** * ***** * ***** * * *** * * ***** ******* *** *** *** * *** * * * *** *** *******
*         * * *   *   *     * *   * * * *   * *     * *     *   * *   *   * *   *   *   * * * *     *
* ********* ***** * ******* * * * * * *** *** ***** * * *** * * * * *** *** * ********* * * * * * * *
* *         *     * *     * *   * * *   *   * *   * *   * * * * * * *   *   *   *     * *   *   * * *
* * ********* ***** * *** * ***** * *** * * * * *** ***** * *** *** * *** * *** * *** * *** ***** * *
* *   *       *   *   * * *     * * * * * * * *   * *     *     *   *     *   * *   *   *   *   * * *
* *** * ******* ******* * ******* * * * *** * * * * * * ********* * ***** ***** *** ***** *** *** * *
*   * *       * *     *   *       * * *     * * * *   *   *       *   *   *     * * *     *   *   * *
* *** * ***** * * * *** *** ******* * *** *** * * ******* * * ********* *** *** * * ***** * * * *** *
* *   *   *   *   * *   *       *   *   * *   * *       * * * *         * * *   * *     *   * * *   *
* * ***** * ******* * ********* * *** *** * *** ******* * * * * ********* * * *** ***** * ***** * ***
*   *     *     *   *       *   * *       * *     *     * * * *           * *   * *     * *     * * *
* ************* * ********* * *** * ******* ******* *** * * * *********** * *** * * ***** * ***** * *
*   *   *       *           * *   * *       *       *   *   * *         * *   *   *     * *     * * *
*** * * * ******* *********** * *** * ******* ******* ******* * ***** *** *** *** ***** *** *** * * *
*   * *   *   *   *       *   *   * *   *     *     * *     *   *   *   * * * *   *   *   * *   *   *
* *** ***** * * *** ***** *** * * ***** *** *** *** * *** * ***** * *** * * * ***** * *** *** ***** *
*     *     *       *         * *           *     *       *       *   *     *       *         *     *
*************************************************** *************************************************
"""

other2 = """*************************************************** *************************************************
* *     *             *     *           *   *     *     *   *             *       *     *     *     *"""



parsed_data = []



for node in list(data_string.split("\n")):
	if len(node) > 4:
		raw = list(node.split(" "))
		new_ele = [ int(raw[0])*2, int(raw[1])*2, int(raw[2]) ]
		parsed_data.append(new_ele)


graph = []

# FIND BIGGEST
biggest = -1
for node in parsed_data:
	if node[0] > biggest:
		biggest = node[0]


for i in range(biggest+3):
	ys = []
	for i in range(biggest+3):
		ys.append(0)
	graph.append(ys)

for row in graph:
	print(row)

print(" ")

for coord in parsed_data:
	if coord[2] == 0:
		graph[coord[0]][coord[1]] = 1
		graph[(coord[0])+1][coord[1]] = 1
		graph[coord[0]][coord[1]+1] = 1
	if coord[2] == 1:
		graph[coord[0]][coord[1]] = 1
		graph[coord[0]][coord[1]+1] = 1
	if coord[2] == 2:
		graph[coord[0]][coord[1]] = 1
		graph[coord[0]+1][coord[1]] = 1
	if coord[2] == 3:
		graph[coord[0]][coord[1]] = 1

for row in graph:
	print(row)

graph_trans = []
for i in range(len(graph)):
	xs = []
	for j in range(len(graph[i])):
		xs.append(graph[j][i])
	graph_trans.append(xs)

for i in range(len(graph_trans)):
	if i == len(graph_trans)-1:
		for j in range(len(graph_trans[i])):
			graph_trans[i][j] = 1
	for j in range(len(graph_trans[i])):
		if j == len(graph_trans[i])-1:
			graph_trans[i][j] = 1


print(" ")

for row in graph_trans:
	print(row)

print(" ")

for row in graph_trans:
	for point in row:
		if point == 1:
			print("XX", end="")
		else:
			print("  ",end="")
	print(" ")

print(len(graph))
print(len(graph[1]))


changes = 1
first_pass = 1
counter = 0
while changes != 0 or first_pass == 1:
	first_pass = 0
	changes = 0
	counter+=1
	for i in range(len(graph_trans)):
		for j in range(len(graph_trans[i])):
			if not (i == 1 and j == 1) and not ( i == 31 and j == 31) and (i != 0) and (i != 32 ) and (j != 32) and (j != 0):
				if graph_trans[i][j] == 0:
					neigh_1 = graph_trans[i+1][j]
					neigh_2 = graph_trans[i][j+1]
					neigh_3 = graph_trans[i-1][j]
					neigh_4 = graph_trans[i][j-1]

					sum = neigh_1 + neigh_2 + neigh_3 + neigh_4
					if sum > 2:
						graph_trans[i][j] = 1
						changes += 1


for row in graph_trans:
	for point in row:
		if point == 1:
			print("XX", end="")
		else:
			print("  ",end="")
	print(" ")

print(counter)

#
# ngraph = []
#
# for row in other.split("\n"):
# 	grow = []
# 	if len(row) > 10:
# 		for ele in row:
# 			if ele == "*":
# 				grow.append(1)
# 			else:
# 				grow.append(0)
# 		print(grow)
# 		ngraph.append(grow)
#
# print(" ")
# for row in ngraph:
# 	for point in row:
# 		if point == 1:
# 			print("XX", end="")
# 		else:
# 			print("  ",end="")
#
# 	print(" ")
#
# print(len(ngraph[1]))
#
#
#
# changes = 1
# first_pass = 1
# counter = 0
# while changes != 0 or first_pass == 1:
# #for k in range(20):
# 	first_pass = 0
# 	changes = 0
# 	counter+=1
# 	for i in range(len(ngraph)):
# 		print(ngraph[i])
# 		for j in range(len(ngraph[i])):
# 			if (i > 0) and (i < 60) and not ( j > 100) and (i - 1 > -1) and ( j - 1 > -1 ):
# 				if ngraph[i][j] == 0:
# 					print( i, j,  ngraph[i][j])
# 					neigh_1 = ngraph[i+1][j]
# 					neigh_2 = ngraph[i][j+1]
# 					neigh_3 = ngraph[i-1][j]
# 					neigh_4 = ngraph[i][j-1]
#
# 					sum = neigh_1 + neigh_2 + neigh_3 + neigh_4
# 					if sum > 2:
# 						ngraph[i][j] = 1
# 						changes += 1
#
# 						print(" ")
# for row in ngraph:
# 	for point in row:
# 		if point == 1:
# 			print("XX", end="")
# 		else:
# 			print("  ",end="")
#
# 	print(" ")